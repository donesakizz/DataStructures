#include <stdio.h>
#include <stdlib.h>
#include <locale.h>

struct node {
int data;
struct node *left;
struct node *right;
};

struct node *new_node(int data){
struct node *p = (struct node*) malloc(sizeof(struct node));
p -> data = data;
p -> left = NULL;
p -> right = NULL;
return p;
}

struct node *insert(struct node *root, int data) {
if(root != NULL) {
if(data < root -> data)
root -> left = insert(root -> left, data);
else
root -> right = insert(root -> right, data);
}else
root = new_node(data);
return root;
}

void print_preOrder(struct node *root) {
if(root != NULL) {
printf("%d ", root -> data);
print_preOrder(root -> left);
print_preOrder(root -> right);
}
}
void print_inOrder(struct node *root) {
if(root != NULL) {
print_inOrder(root -> left);
printf("%d ", root -> data);
print_inOrder(root -> right);
}

}
void print_postOrder(struct node *root) {
if(root != NULL) {
print_postOrder(root -> left);
print_postOrder(root -> right);
printf("%d ", root -> data);
}
}
int main()
{
    setlocale(LC_ALL,"Turkish");
    struct node *my_root=NULL;
    int data, secim;
    while(1){
    printf("\nBINARY TREES APP\n");
    printf("\n-----Aþaðýdaki Ýþlemlerden Birini Seçiniz...---\n");
    printf("1-Aðaca Eleman Ekleme\n");
    printf("2-Aðacýn Elemanlarýný Listele (PreOrder)\n");
    printf("3-Aðacýn Elemanlarýný Listele (InOrder)\n");
    printf("4-Aðacýn Elemanlarýný Listele (PostOrder)\n");
    printf("5-Çýkýþ\n");
    scanf("%d", &secim);

            switch(secim){
                case 1:printf("Lütfen Aðaca Eklemek Ýstediðiniz Deðeri Giriniz..");
                    scanf("%d",&data);
                    my_root = insert(my_root, data);
                    break;
                case 2:print_preOrder(my_root);
                    break;
                case 3:print_inOrder(my_root);
                    break;
                case 4:print_postOrder(my_root);
                    break;
                case 5:exit(0);
                    break;
                default: printf("Yanlis secim\n");
            }
    }
    return ;
}
